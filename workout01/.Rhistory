rm(list = ls())
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
getwd()
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
ls()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
dat <- read.csv(datafile, stringsAsFactors = FALSE)
first_five = slice(dat, 1:5)
first_five
multiples_five = slice(dat, seq(10, 50, 5))
multiples_five
last_five = slice(dat, (nrow(dat)-4):nrow(dat))
last_five
less70 = filter(dat, height < 70)
less70
gsw = filter(dat, team == 'GSW')
gsw
gswc = filter(gsw, position == 'C')
gswc
lal_names = select(filter(dat, team == 'LAL'), player)
lal_names
gsw_pg = select(filter(gsw, position == 'PG'), player, salary)
gsw_pg
more10_less10 = select(filter(dat, experience > 10 & salary <= 10000000), player, age, team)
more10_less10
first5_rookies = slice(select(filter(dat, age == 20 & experience == 1), player, team, height, weight), 1:5)
first5_rookies
knitr::opts_chunk$set(echo = TRUE)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[TRUE, TRUE]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[TRUE, TRUE]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[TRUE]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[FALSE]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[FALSE, TRUE]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[c(FALSE, TRUE),c(FALSE, TRUE)]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[c(FALSE, TRUE),]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
github = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo = 'master/data/nba2018-players.csv'
datafile = paste0(github, repo)
data_types = c('character', 'factor', 'factor', 'integer', 'integer', 'integer', 'integer', 'character', 'real', 'integer', 'integer', 'integer', 'integer', 'integer', 'integer')
nba = read.csv(datafile, header = TRUE, sep = ",", colClasses = data_types)
nba[c(FALSE, TRUE, TRUE),]
str(nba, vec.len = 1)
nba2 = read.table(datafile, header = TRUE, sep = ",", colClasses = data_types)
str(nba2, vec.len = 1)
identical(nba, nba2)
1:3^2
(1:5)*2
var<-3
Var*2
x<-2
2x = 2*x
sqrt4 <- sqrt(4)
srqt4
sqrt4
a number <- 16
seq(1.0, 2.0, .1)
rep(c(1, 2, 3), 2)
rep(c(1, 2, 3), times = 1)
rep(c(1, 2, 3), times = 2)
rep(c(1, 2, 3), times = 2)
matrix(1:12, nrow - 4, ncol = 3)
matrix(1:12, nrow = 4, ncol = 3)
matrix(1:12, nrow = 4, ncol = 3, byrow = TRUE)
help(:)
help(?:)
help(?'')
help(':')
help("arrange")
help(arrange)
help("arrange")
help("arrange")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
data = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
setwd("~/Desktop/Stat133Projects")
setwd("~/Desktop/Stat133Projects/workout01")
library(dplyr)
data = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
getwd()
library(dplyr)
data = read.csv('../Stat133Projects/workout01/data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./Stat133Projects/workout01/data/shots-data.csv', header = TRUE, sep = ",")
knitr::opts_chunk$set(echo = TRUE)
andre = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv'
draymond = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/draymond-green.csv'
kevin = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/kevin-durant.csv'
klay = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/klay-thompson.csv'
stephen = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/stephen-curry.csv'
#download.file(andre, 'andre-iguodala.csv')
#download.file(draymond, 'draymond-green.csv')
#download.file(kevin, 'kevin-durant.csv')
#download.file(klay, 'klay-thompson.csv')
#download.file(stephen, 'stephen-curry.csv')
library(dplyr)
data = read.csv('./Stat133Projects/workout01/data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
library(dplyr)
data = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('shots-data.csv', header = TRUE, sep = ",")
getwd()
library(dplyr)
shotsData = read.csv('../Stat133Projects/workout01/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('./Stat133Projects/workout01/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('./data/workout01/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('/Macintosh HD/Users/ganeshmuthu/Desktop/Stat133Projects/workout01/⁨dat/shots-data.csv'⁩, header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('Users/ganeshmuthu/desktop/Stat133Projects/workout01/data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./data/shots-data.csv/', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./data/shots-data.csv/', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./data/shots-data.csv/', header = TRUE, sep = ",")
library(dplyr)
data = read.csv('./data/shots-data.csv/', header = TRUE, sep = ",")
library(jpeg)
library(grid)
library(ggplot2)
imageUrl = 'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/images/nba-court.jpg'
court_file = './images/nba-court.jpeg'
download.file(imageUrl, court_file)
courtImage = rasterGrob(
readJPEG(court_file),
width = unit(1, 'npc'),
height = unit(1, 'npc'))
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
andreShotChart = ggplot(data = filter(shotsData, name == 'Andre Iguodala')) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2016 season)') +
theme_minimal()
ggsave('./images/andre-iguodala-shot-chart.pdf', plot = andreShotChart, width = 6.5, height = 5)
draymondShotChart = ggplot(data = filter(shotsData, name == 'Draymond Green')) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Draymond Green (2016 season)') +
theme_minimal()
ggsave('./images/draymond-green-shot-chart.pdf', plot = draymondShotChart, width = 6.5, height = 5)
kevinShotChart = ggplot(data = filter(shotsData, name == 'Kevin Durant')) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2016 season)') +
theme_minimal()
ggsave('./images/kevin-durant-shot-chart.pdf', plot = kevinShotChart, width = 6.5, height = 5)
klayShotChart = ggplot(data = filter(shotsData, name == 'Klay Thompson')) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
ggsave('./images/klay-thompson-shot-chart.pdf', plot = klayShotChart, width = 6.5, height = 5)
stephenShotChart = ggplot(data = filter(shotsData, name == 'Stephen Curry')) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Stephen Curry (2016 season)') +
theme_minimal()
ggsave('./images/stephen-curry-shot-chart.pdf', plot = stephenShotChart, width = 6.5, height = 5)
gswShotChart = ggplot(data = shotsData) +
annotation_custom(courtImage, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Charts: GSW (2016 season)') +
theme_minimal() +
facet_wrap(~name)
ggsave('./images/gsw-shot-charts.pdf', plot = gswShotChart, width = 8, height = 7)
ggsave('./images/gsw-shot-charts.png', plot = gswShotChart, width = 8, height = 7)
setwd("~/Desktop/Stat133Projects/workout01")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
getwd()
library(dplyr)
shotsData2 = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
setwd('desktop')
library(dplyr)
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
getwd
getwd()
library(dplyr)
shotsData = read.csv('data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('./data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
#shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
summarise(groupby(shotsData, name), made = sum(name == name))
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
summarise(group_by(shotsData, name), made = sum(name == name))
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
TwoPointEffective = summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '2PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'),
perc_made = made/total))
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
TwoPointEffective = summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '2PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'),
perc_made = made/total)
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
TwoPointEffective = summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '2PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'),
perc_made = made/total)
TwoPointEffective
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
TwoPointEffective = summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '2PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'),
perc_made = made/total,
desc(perc_made))
TwoPointEffective
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
TwoPointEffective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '2PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '2PT Field Goal'),
perc_made = made/total), desc(perc_made))
TwoPointEffective
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
ThreePointEffective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '3PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'),
perc_made = made/total), desc(perc_made))
ThreePointEffective
library(dplyr)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
effective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name),
made = sum(shot_made_flag == 'shot_yes'),
perc_made = made/total), desc(perc_made))
effective
library(dplyr)
library(grid)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
threePointEffective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '3PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'),
perc_made = made/total), desc(perc_made))
grid.table(threePointEffective)
install.packages('gridExtra')
library(dplyr)
library(gridExtra)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
threePointEffective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '3PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'),
perc_made = made/total), desc(perc_made))
grid.table(threePointEffective)
library(dplyr)
library(gridExtra)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
threePointEffective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name & shot_type == '3PT Field Goal'),
made = sum(shot_made_flag == 'shot_yes' & shot_type == '3PT Field Goal'),
perc_made = made/total), desc(perc_made))
grid.table(threePointEffective)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
effective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name),
made = sum(shot_made_flag == 'shot_yes'),
perc_made = made/total), desc(perc_made))
kable(effective)
install.packages('knitr')
knitr::opts_chunk$set(echo = TRUE)
shotsData = read.csv('../data/shots-data.csv', header = TRUE, sep = ",")
effective = arrange(summarise(
group_by(shotsData, name),
total = sum(name == name),
made = sum(shot_made_flag == 'shot_yes'),
perc_made = made/total), desc(perc_made))
